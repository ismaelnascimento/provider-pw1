<!DOCTYPE html>
<html>

<head>
    <title><%= pageName %></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
        href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
        rel="stylesheet" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'color-primary': 'var(--color-primary)',
                        'color-primary-light': 'var(--color-primary-light)',
                        'color-gray-light': 'var(--color-gray-light)',
                        'color-gray-light-2': 'var(--color-gray-light-2)',
                        'color-gray': 'var(--color-gray)',
                        'color-bg': 'var(--color-bg)',
                    }
                }
            }
        }
    </script>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link rel="stylesheet" href="https://cdn.hugeicons.com/font/hgi-stroke-rounded.css" />
    <link rel="icon" href="assets/logo.svg" type="image/x-icon" />
</head>

<body>
    <div class="w-full h-dvh flex flex-col items-center gap-6 mt-12 mb-0">
        <div class="flex items-center gap-4">
            <img src="/assets/logo.svg" alt="Logo" class="h-10 w-10" />
            <h1 class="text-2xl font-semibold text-color-bg">Provider</h1>
        </div>
        <form action="/location-edit" method="post"
            class="flex flex-col gap-4 w-full md:w-fit h-fit p-8 bg-white rounded-lg border border-color-gray-light-2">

            <div class="flex items-center gap-2 justify-center">
                <a href="/">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="28" height="28" color="#000000"
                        fill="none">
                        <path d="M15 6C15 6 9.00001 10.4189 9 12C8.99999 13.5812 15 18 15 18" stroke="#000000"
                            stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg>
                </a>
                <h1 class="font-semibold text-center text-2xl text-color-bg">Editar Localização</h1>
            </div>

            <div class="flex flex-col gap-2 my-2">
                <div class="flex flex-col gap-0.5">
                    <label class="text-sm font-medium text-color-bg">Localização</label>
                    <div class="flex items-center gap-2">
                        <input
                            class="placeholder-color-gray p-4 outline-2 outline-color-primary bg-white w-full md:w-24  text-color-bg h-10 rounded-lg text-sm font-medium border border-color-gray-light-2"
                            id="input-location-city" name="locationCity" type="text" placeholder="Cidade" 
                            value="<%= user.location.city %>">
                        <input
                            class="placeholder-color-gray p-4 outline-2 outline-color-primary bg-white w-full md:w-24 text-color-bg h-10 rounded-lg text-sm font-medium border border-color-gray-light-2"
                            id="input-location-state" name="locationState" type="text" placeholder="Estado"
                            value="<%= user.location.state %>">
                        <input
                            class="placeholder-color-gray p-4 outline-2 outline-color-primary bg-white w-full md:w-24 text-color-bg h-10 rounded-lg text-sm font-medium border border-color-gray-light-2"
                            id="input-location-neighborhood" name="locationNeighborhood" type="text"
                            placeholder="Bairro" value="<%= user.location.neighborhood %>">
                        <input
                            class="placeholder-color-gray p-4 outline-2 outline-color-primary bg-white w-full md:w-24 text-color-bg h-10 rounded-lg text-sm font-medium border border-color-gray-light-2"
                            id="input-location-street" name="locationStreet" type="text" placeholder="Rua"
                            value="<%= user.location.street %>">
                    </div>

                    <div class="my-1">
                        <label class="text-sm font-medium text-color-bg">Clique no mapa para definir a
                            localização</label>
                        <div id="map" class="w-full h-64 rounded-lg border border-color-gray-light-2"></div>
                    </div>
                </div>
            </div>

            <input type="hidden" name="locationLatitude" id="latitude" value="<%= user.location.coordinates[1] %>">
            <input type="hidden" name="locationLongitude" id="longitude" value="<%= user.location.coordinates[0] %>">

            <% if (error != null) { %>
                <%- include("./partials/error.ejs", { error: error }) -%>
            <% } %>

            <button
                class="hover:bg-color-bg outline-none bg-color-primary w-full text-white h-10 rounded-lg text-sm font-medium"
                type="submit">Salvar Alterações</button>
        </form>
    </div>

    <script>
        function updateInputs(lat, lng) {
            document.getElementById('latitude').value = lat;
            document.getElementById('longitude').value = lng;
        }

        let map;

        function initMap(lat, lng) {
            map = L.map('map').setView([lat, lng], 13);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);

            let marker = L.marker([lat, lng], { draggable: true }).addTo(map);

            updateInputs(lat, lng);

            marker.on('dragend', function (e) {
                const position = e.target.getLatLng();
                updateInputs(position.lat, position.lng);
            });

            map.on('click', function (e) {
                const clickedLat = e.latlng.lat;
                const clickedLng = e.latlng.lng;
                marker.setLatLng([clickedLat, clickedLng]);
                updateInputs(clickedLat, clickedLng);
            });
        }

        // Initialize map with the user's current location
        const userLat = '<%= user.location.coordinates[1] %>';
        const userLng = '<%= user.location.coordinates[0] %>';
        
        if (userLat && userLng) {
            initMap(userLat, userLng);
        } else {
            // Default location if user doesn't have coordinates
            navigator.geolocation.getCurrentPosition(
                function (position) {
                    initMap(position.coords.latitude, position.coords.longitude);
                },
                function () {
                    // Default to Ceará if no geolocation
                    initMap(-3.71839, -38.5434);
                }
            );
        }
    </script>
</body>

</html>
